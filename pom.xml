<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.shsxt</groupId>
  <artifactId>micro-parent</artifactId>
  <version>1.0-SNAPSHOT</version>
  <modules>
    <module>mirco-register</module>
    <module>micro-server</module>
    <module>micro-client</module>
  </modules>
  <packaging>pom</packaging>

  <distributionManagement>
    <site>
      <id>website</id>
      <url>scp://webhost.company.com/www/website</url>
    </site>
  </distributionManagement>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.build.resourceEncoding>UTF-8</project.build.resourceEncoding>
    <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>1.8</maven.compiler.target>
    <java.version>1.8</java.version>
  </properties>

  <parent>
    <groupId>org.springframework.cloud</groupId>
    <artifactId>spring-cloud-starter-parent</artifactId>
    <version>Camden.SR6</version>
  </parent>

  <dependencies>
    <!-- Spring Cloud starter -->
    <dependency>
      <groupId>org.springframework.cloud</groupId>
      <artifactId>spring-cloud-starter</artifactId>
    </dependency>

    <!-- 注册中心 -->
    <dependency>
      <groupId>org.springframework.cloud</groupId>
      <artifactId>spring-cloud-starter-eureka-server</artifactId>
    </dependency>

    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>test</scope>
    </dependency>


  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>2.3.2</version>
        <configuration>
          <source>${java.version}</source>
          <target>${java.version}</target>
          <encoding>utf-8</encoding>
          <!-- added by xiluhua 20160627 com.sun.org.apache.xml.internal.security.utils.Base64;编译异常
              将${java.home}/lib/rt.jar添加到maven的compiler里面 如果 JAVA_HOME 里面没有，将 jre 里面的 copy
              过来 -->
          <compilerArguments>
            <verbose />
            <bootclasspath>${java.home}/jre/lib/rt.jar</bootclasspath>
          </compilerArguments>
        </configuration>
      </plugin>

    </plugins>
  </build>

</project>
